
service: serverless-java

provider:
  name: aws
  runtime: java8
  region: ap-southeast-1

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  artifact: target/simplelambdahandler-1.0.0.jar

functions:
  simplelambdahandler:
    handler: org.egov.SimpleLambdaHandler
    events:
      - stream:
          type: kinesis
          arn: { Fn::GetAtt: [ TestKinesisStream, Arn ] }
          batchSize: 100
          startingPosition: TRIM_HORIZON
          # be sure to understand starting position, especially when deploying a new lambda against a pre-existing kinesis stream
resources:
  Resources:
    TestKinesisStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:service}-${opt:stage, 'dev'}-TestKinesisStream
        ShardCount: 1

    TestRDS:
      Type: "AWS::RDS::DBInstance"
      Properties:
        AllocatedStorage: 20
        #AllowMajorVersionUpgrade: Boolean
        AutoMinorVersionUpgrade: true
        #AvailabilityZone: String
        #BackupRetentionPeriod: String
        #CharacterSetName: String
        #CopyTagsToSnapshot: Boolean
        #DBClusterIdentifier: String
        DBInstanceClass: db.t2.micro
        #DBInstanceIdentifier: String
        DBName: TestRDSDBName
        #DBParameterGroupName: String
        #DBSecurityGroups:
        #  - String
        #DBSnapshotIdentifier: String
        #DBSubnetGroupName: String
        Engine: postgres
        #EngineVersion: 9.6
        #Iops: Number
        #KmsKeyId: String
        #LicenseModel: String

        MasterUsername: ${ssm:/${self:service}/dev/rds_username}
        MasterUserPassword: ${ssm:/${self:service}/dev/rds_password}
        # TODO: can scope passwords to deployment stage - just need to create them before deploying to that stage
        #MasterUsername: ${ssm:/${self:service}/${opt:stage, 'dev'}/rds_user}
        #MasterUserPassword: ${ssm:/${self:service}/${opt:stage, 'dev'}/rds_password}

        #MonitoringInterval: Integer
        #MonitoringRoleArn: String
        #MultiAZ: Boolean
        #OptionGroupName: String
        #Port: String
        #PreferredBackupWindow: String
        #PreferredMaintenanceWindow: String
        PubliclyAccessible: false
        #SourceDBInstanceIdentifier: String
        #SourceRegion: String
        #StorageEncrypted: Boolean
        #StorageType: String
        #Tags:
        #  Resource Tag
        #Timezone: String
        #VPCSecurityGroups:
        #  - String

  Outputs:
    TestKinesisStreamARN:
      Description: "ARN for TestKinesisStream"
      Value:
        Fn::GetAtt:
          - TestKinesisStream
          - Arn
    TestRDSEndpointAddress:
      Description: "Endpoint.Address"
      Value: {"Fn::GetAtt": ["TestRDS","Endpoint.Address"]}
    TestRDSEndpointPort:
      Description: "Endpoint.Address"
      Value: {"Fn::GetAtt": ["TestRDS","Endpoint.Port"]}